name: Tests Postman
on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      api:        
        description: 'Collection'
        default: 'jsonplaceholderapi'
        required: false

      environnement:
        description: 'Environnement'
        default: 'Preprod'
        required: false
        
      folders:
        description: 'Folders'
        default: ''
        required: false     
      
      iterations:
        description: 'Number of iterations to run'
        default: 2
        required: false     
      
      request_timeout:
        description: 'Request timeout (ms)'
        default: 500
        required: false  


jobs:
  test-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # INstall Node on the runner
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      # Install the newman command line utility and also install the html extra reporter
      - name: Install newman
        run: |
          npm install @types/newman --save
          npm install -g newman
          npm install -g newman-reporter-htmlextra
          npm install -g newman-reporter-junitfull
          npm install -g newman-reporter-junitxray
          npm i newman-reporter-json-forazuredevops
      # Make directory to upload the test results
      - name: Make Directory for results
        run: mkdir -p testResults

      - name: Prepare folders
        run: |
          folders=${{ github.event.inputs.folders }} ;IFS=',' read -r -a array <<< "$folders" ;a='' ;for i in "${array[@]}"; do fldrs=$fldrs" --folder $i"; done ;
          echo "FOLDERS=$fldrs" >> $GITHUB_ENV

      # Run the POSTMAN collection
      - name: Run POSTMAN collection
        run: |
          newman run collections/jsonplaceholderapi/postman_collection.json -e collections/jsonplaceholderapi/postman_environment.json ${{ env.FOLDERS }} -r 'cli,junitfull,junitxray,htmlextra,json-forazuredevops' --reporter-htmlextra-export testResults/htmlreport.html  --reporter-junitfull-export testResults/postman_echo_junitfull.xml  --reporter-junitxray-export testResults/resultxray.xml  --reporter-summary-json-export  testResults/results.json  --timeout-request  ${{ github.event.inputs.request_timeout || 500 }}  -n ${{ github.event.inputs.iterations || 1}}

      # Upload the contents of Test Results directory to workspace
      - name: Output the run Details
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: RunReports
          path: testResults
