{
	"info": {
		"_postman_id": "b32b0db0-b78b-440e-bb21-5fbf01397062",
		"name": "Exemples Automatisation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8252017"
	},
	"item": [
		{
			"name": "Get Post 1 From Google",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"pm.expect(responseJson.userId).to.eql(1);\r",
							"pm.expect(responseJson.title).to.contains(\"sunt aut facere\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Post 2 From Google",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code is 200\",function(){\r",
							"    const jsonData = pm.response.json();\r",
							"     pm.response.to.be.ok;\r",
							"     pm.expect(jsonData.id).to.be.a(\"Number\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/2",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Status Functionality",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status One Of 200 201 202\", () => {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Status Name\", () => {\r",
							"  pm.expect(pm.response.status).to.be.eql(\"OK\");\r",
							"  pm.response.to.have.status(200);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/3",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check Headers Functionality",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Headers Response has header\",function(){\r",
							"      const JsonHeaders=pm.response.headers;\r",
							"      pm.response.to.have.header(\"X-Ratelimit-Reset\");\r",
							"    \r",
							"})\r",
							"\r",
							"pm.test(\"Check Headers Response has header value\",function(){\r",
							"      const JsonHeaders=pm.response.headers;\r",
							"      pm.expect(pm.response.headers.get(\"Server\")).to.eql(\"cloudflare\")\r",
							"    \r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/3",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"\r",
							"pm.test('Get All COmments OK',function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    pm.expect(pm.response.code).to.be.eq(200);\r",
							"    pm.response.to.not.be.empty;\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					]
				}
			},
			"response": []
		}
	]
}